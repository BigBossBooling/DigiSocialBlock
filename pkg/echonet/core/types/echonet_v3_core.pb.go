// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: echonet_v3_core.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for Content Types
type ContentType int32

const (
	ContentType_CONTENT_TYPE_UNSPECIFIED ContentType = 0
	ContentType_CONTENT_TYPE_POST        ContentType = 1
	ContentType_CONTENT_TYPE_ARTICLE     ContentType = 2
	ContentType_CONTENT_TYPE_COMMENT     ContentType = 3
	ContentType_CONTENT_TYPE_SHARE       ContentType = 4 // A reshare of existing content
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "CONTENT_TYPE_UNSPECIFIED",
		1: "CONTENT_TYPE_POST",
		2: "CONTENT_TYPE_ARTICLE",
		3: "CONTENT_TYPE_COMMENT",
		4: "CONTENT_TYPE_SHARE",
	}
	ContentType_value = map[string]int32{
		"CONTENT_TYPE_UNSPECIFIED": 0,
		"CONTENT_TYPE_POST":        1,
		"CONTENT_TYPE_ARTICLE":     2,
		"CONTENT_TYPE_COMMENT":     3,
		"CONTENT_TYPE_SHARE":       4,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_echonet_v3_core_proto_enumTypes[0].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_echonet_v3_core_proto_enumTypes[0]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_echonet_v3_core_proto_rawDescGZIP(), []int{0}
}

// Enum for Interaction Types
type InteractionType int32

const (
	InteractionType_INTERACTION_TYPE_UNSPECIFIED InteractionType = 0
	InteractionType_INTERACTION_TYPE_LIKE        InteractionType = 1
	InteractionType_INTERACTION_TYPE_VIEW        InteractionType = 2 // Explicit view, e.g., opening an article
	InteractionType_INTERACTION_TYPE_HIDE        InteractionType = 3 // User hides content from their feed
	InteractionType_INTERACTION_TYPE_REPORT      InteractionType = 4 // User reports content
)

// Enum value maps for InteractionType.
var (
	InteractionType_name = map[int32]string{
		0: "INTERACTION_TYPE_UNSPECIFIED",
		1: "INTERACTION_TYPE_LIKE",
		2: "INTERACTION_TYPE_VIEW",
		3: "INTERACTION_TYPE_HIDE",
		4: "INTERACTION_TYPE_REPORT",
	}
	InteractionType_value = map[string]int32{
		"INTERACTION_TYPE_UNSPECIFIED": 0,
		"INTERACTION_TYPE_LIKE":        1,
		"INTERACTION_TYPE_VIEW":        2,
		"INTERACTION_TYPE_HIDE":        3,
		"INTERACTION_TYPE_REPORT":      4,
	}
)

func (x InteractionType) Enum() *InteractionType {
	p := new(InteractionType)
	*p = x
	return p
}

func (x InteractionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InteractionType) Descriptor() protoreflect.EnumDescriptor {
	return file_echonet_v3_core_proto_enumTypes[1].Descriptor()
}

func (InteractionType) Type() protoreflect.EnumType {
	return &file_echonet_v3_core_proto_enumTypes[1]
}

func (x InteractionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InteractionType.Descriptor instead.
func (InteractionType) EnumDescriptor() ([]byte, []int) {
	return file_echonet_v3_core_proto_rawDescGZIP(), []int{1}
}

// Enum for Witness Proof Status
type WitnessProofStatus int32

const (
	WitnessProofStatus_WITNESS_PROOF_STATUS_UNSPECIFIED WitnessProofStatus = 0
	WitnessProofStatus_WITNESS_PROOF_STATUS_PENDING     WitnessProofStatus = 1 // Proof is awaiting verification
	WitnessProofStatus_WITNESS_PROOF_STATUS_VERIFIED    WitnessProofStatus = 2 // Proof has been successfully verified
	WitnessProofStatus_WITNESS_PROOF_STATUS_REJECTED    WitnessProofStatus = 3 // Proof was found to be invalid
)

// Enum value maps for WitnessProofStatus.
var (
	WitnessProofStatus_name = map[int32]string{
		0: "WITNESS_PROOF_STATUS_UNSPECIFIED",
		1: "WITNESS_PROOF_STATUS_PENDING",
		2: "WITNESS_PROOF_STATUS_VERIFIED",
		3: "WITNESS_PROOF_STATUS_REJECTED",
	}
	WitnessProofStatus_value = map[string]int32{
		"WITNESS_PROOF_STATUS_UNSPECIFIED": 0,
		"WITNESS_PROOF_STATUS_PENDING":     1,
		"WITNESS_PROOF_STATUS_VERIFIED":    2,
		"WITNESS_PROOF_STATUS_REJECTED":    3,
	}
)

func (x WitnessProofStatus) Enum() *WitnessProofStatus {
	p := new(WitnessProofStatus)
	*p = x
	return p
}

func (x WitnessProofStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WitnessProofStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_echonet_v3_core_proto_enumTypes[2].Descriptor()
}

func (WitnessProofStatus) Type() protoreflect.EnumType {
	return &file_echonet_v3_core_proto_enumTypes[2]
}

func (x WitnessProofStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WitnessProofStatus.Descriptor instead.
func (WitnessProofStatus) EnumDescriptor() ([]byte, []int) {
	return file_echonet_v3_core_proto_rawDescGZIP(), []int{2}
}

// NexusContentObjectV1 represents a piece of content within the Nexus Protocol.
type NexusContentObjectV1 struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ContentId         string                 `protobuf:"bytes,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                                                                                           // Unique identifier for the content (e.g., SHA-256 hash of canonical form)
	AuthorDid         string                 `protobuf:"bytes,2,opt,name=author_did,json=authorDid,proto3" json:"author_did,omitempty"`                                                                                           // DID of the content creator
	ContentType       ContentType            `protobuf:"varint,3,opt,name=content_type,json=contentType,proto3,enum=echonet.v3.core.ContentType" json:"content_type,omitempty"`                                                   // Type of content (e.g., post, article)
	ContentBody       string                 `protobuf:"bytes,4,opt,name=content_body,json=contentBody,proto3" json:"content_body,omitempty"`                                                                                     // The actual content data (e.g., text, link to media)
	Tags              []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`                                                                                                                      // Keywords or tags associated with the content
	CreatedAtClient   int64                  `protobuf:"varint,6,opt,name=created_at_client,json=createdAtClient,proto3" json:"created_at_client,omitempty"`                                                                      // Timestamp (Unix nano) when the content was created, asserted by the client
	CreatedAtNetwork  int64                  `protobuf:"varint,7,opt,name=created_at_network,json=createdAtNetwork,proto3" json:"created_at_network,omitempty"`                                                                   // Timestamp (Unix nano) when the content was first observed by the network
	PreviousVersionId string                 `protobuf:"bytes,8,opt,name=previous_version_id,json=previousVersionId,proto3" json:"previous_version_id,omitempty"`                                                                 // Optional: ID of a previous version if this is an update
	LicenseUri        string                 `protobuf:"bytes,9,opt,name=license_uri,json=licenseUri,proto3" json:"license_uri,omitempty"`                                                                                        // Optional: URI pointing to the license terms for this content
	CustomMetadata    map[string]string      `protobuf:"bytes,10,rep,name=custom_metadata,json=customMetadata,proto3" json:"custom_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Optional: For additional, non-standardized metadata
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NexusContentObjectV1) Reset() {
	*x = NexusContentObjectV1{}
	mi := &file_echonet_v3_core_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NexusContentObjectV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NexusContentObjectV1) ProtoMessage() {}

func (x *NexusContentObjectV1) ProtoReflect() protoreflect.Message {
	mi := &file_echonet_v3_core_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NexusContentObjectV1.ProtoReflect.Descriptor instead.
func (*NexusContentObjectV1) Descriptor() ([]byte, []int) {
	return file_echonet_v3_core_proto_rawDescGZIP(), []int{0}
}

func (x *NexusContentObjectV1) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *NexusContentObjectV1) GetAuthorDid() string {
	if x != nil {
		return x.AuthorDid
	}
	return ""
}

func (x *NexusContentObjectV1) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *NexusContentObjectV1) GetContentBody() string {
	if x != nil {
		return x.ContentBody
	}
	return ""
}

func (x *NexusContentObjectV1) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *NexusContentObjectV1) GetCreatedAtClient() int64 {
	if x != nil {
		return x.CreatedAtClient
	}
	return 0
}

func (x *NexusContentObjectV1) GetCreatedAtNetwork() int64 {
	if x != nil {
		return x.CreatedAtNetwork
	}
	return 0
}

func (x *NexusContentObjectV1) GetPreviousVersionId() string {
	if x != nil {
		return x.PreviousVersionId
	}
	return ""
}

func (x *NexusContentObjectV1) GetLicenseUri() string {
	if x != nil {
		return x.LicenseUri
	}
	return ""
}

func (x *NexusContentObjectV1) GetCustomMetadata() map[string]string {
	if x != nil {
		return x.CustomMetadata
	}
	return nil
}

// NexusUserObjectV1 represents a user profile within the Nexus Protocol.
type NexusUserObjectV1 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserDid       string                 `protobuf:"bytes,1,opt,name=user_did,json=userDid,proto3" json:"user_did,omitempty"`                                                                                          // DID of the user, primary key
	DisplayName   string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`                                                                              // User's chosen display name
	Bio           string                 `protobuf:"bytes,3,opt,name=bio,proto3" json:"bio,omitempty"`                                                                                                                 // Short biography or description
	AvatarUri     string                 `protobuf:"bytes,4,opt,name=avatar_uri,json=avatarUri,proto3" json:"avatar_uri,omitempty"`                                                                                    // URI pointing to the user's avatar image
	BannerUri     string                 `protobuf:"bytes,5,opt,name=banner_uri,json=bannerUri,proto3" json:"banner_uri,omitempty"`                                                                                    // URI pointing to the user's profile banner image
	CreatedAt     int64                  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                                                   // Timestamp (Unix nano) when the user profile was created
	UpdatedAt     int64                  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                                                                   // Timestamp (Unix nano) when the user profile was last updated
	ProfileLinks  map[string]string      `protobuf:"bytes,8,rep,name=profile_links,json=profileLinks,proto3" json:"profile_links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Optional: Links to external profiles (e.g., website, other social media)
	IsVerified    bool                   `protobuf:"varint,9,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`                                                                                // Flag indicating if the user account is verified (e.g., by the platform or community process)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NexusUserObjectV1) Reset() {
	*x = NexusUserObjectV1{}
	mi := &file_echonet_v3_core_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NexusUserObjectV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NexusUserObjectV1) ProtoMessage() {}

func (x *NexusUserObjectV1) ProtoReflect() protoreflect.Message {
	mi := &file_echonet_v3_core_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NexusUserObjectV1.ProtoReflect.Descriptor instead.
func (*NexusUserObjectV1) Descriptor() ([]byte, []int) {
	return file_echonet_v3_core_proto_rawDescGZIP(), []int{1}
}

func (x *NexusUserObjectV1) GetUserDid() string {
	if x != nil {
		return x.UserDid
	}
	return ""
}

func (x *NexusUserObjectV1) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *NexusUserObjectV1) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *NexusUserObjectV1) GetAvatarUri() string {
	if x != nil {
		return x.AvatarUri
	}
	return ""
}

func (x *NexusUserObjectV1) GetBannerUri() string {
	if x != nil {
		return x.BannerUri
	}
	return ""
}

func (x *NexusUserObjectV1) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *NexusUserObjectV1) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *NexusUserObjectV1) GetProfileLinks() map[string]string {
	if x != nil {
		return x.ProfileLinks
	}
	return nil
}

func (x *NexusUserObjectV1) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

// NexusInteractionRecordV1 represents a specific interaction a user has with a piece of content.
type NexusInteractionRecordV1 struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	InteractionId          string                 `protobuf:"bytes,1,opt,name=interaction_id,json=interactionId,proto3" json:"interaction_id,omitempty"`                                             // Unique identifier for this interaction
	UserDid                string                 `protobuf:"bytes,2,opt,name=user_did,json=userDid,proto3" json:"user_did,omitempty"`                                                               // DID of the user performing the interaction
	TargetContentId        string                 `protobuf:"bytes,3,opt,name=target_content_id,json=targetContentId,proto3" json:"target_content_id,omitempty"`                                     // ID of the content being interacted with
	InteractionType        InteractionType        `protobuf:"varint,4,opt,name=interaction_type,json=interactionType,proto3,enum=echonet.v3.core.InteractionType" json:"interaction_type,omitempty"` // Type of interaction (e.g., like, comment, view)
	InteractionData        string                 `protobuf:"bytes,5,opt,name=interaction_data,json=interactionData,proto3" json:"interaction_data,omitempty"`                                       // Optional: Additional data related to the interaction (e.g., comment text)
	CreatedAtClient        int64                  `protobuf:"varint,6,opt,name=created_at_client,json=createdAtClient,proto3" json:"created_at_client,omitempty"`                                    // Timestamp (Unix nano) of the interaction, asserted by the client
	CreatedAtNetwork       int64                  `protobuf:"varint,7,opt,name=created_at_network,json=createdAtNetwork,proto3" json:"created_at_network,omitempty"`                                 // Timestamp (Unix nano) when the interaction was first observed by the network
	ReferenceInteractionId string                 `protobuf:"bytes,8,opt,name=reference_interaction_id,json=referenceInteractionId,proto3" json:"reference_interaction_id,omitempty"`                // Optional: ID of a parent interaction (e.g., if this is a reply to a comment)
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NexusInteractionRecordV1) Reset() {
	*x = NexusInteractionRecordV1{}
	mi := &file_echonet_v3_core_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NexusInteractionRecordV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NexusInteractionRecordV1) ProtoMessage() {}

func (x *NexusInteractionRecordV1) ProtoReflect() protoreflect.Message {
	mi := &file_echonet_v3_core_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NexusInteractionRecordV1.ProtoReflect.Descriptor instead.
func (*NexusInteractionRecordV1) Descriptor() ([]byte, []int) {
	return file_echonet_v3_core_proto_rawDescGZIP(), []int{2}
}

func (x *NexusInteractionRecordV1) GetInteractionId() string {
	if x != nil {
		return x.InteractionId
	}
	return ""
}

func (x *NexusInteractionRecordV1) GetUserDid() string {
	if x != nil {
		return x.UserDid
	}
	return ""
}

func (x *NexusInteractionRecordV1) GetTargetContentId() string {
	if x != nil {
		return x.TargetContentId
	}
	return ""
}

func (x *NexusInteractionRecordV1) GetInteractionType() InteractionType {
	if x != nil {
		return x.InteractionType
	}
	return InteractionType_INTERACTION_TYPE_UNSPECIFIED
}

func (x *NexusInteractionRecordV1) GetInteractionData() string {
	if x != nil {
		return x.InteractionData
	}
	return ""
}

func (x *NexusInteractionRecordV1) GetCreatedAtClient() int64 {
	if x != nil {
		return x.CreatedAtClient
	}
	return 0
}

func (x *NexusInteractionRecordV1) GetCreatedAtNetwork() int64 {
	if x != nil {
		return x.CreatedAtNetwork
	}
	return 0
}

func (x *NexusInteractionRecordV1) GetReferenceInteractionId() string {
	if x != nil {
		return x.ReferenceInteractionId
	}
	return ""
}

// WitnessProofV1 represents a proof submitted by a Witness Node.
type WitnessProofV1 struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ProofId             string                 `protobuf:"bytes,1,opt,name=proof_id,json=proofId,proto3" json:"proof_id,omitempty"`                                       // Unique identifier for this proof
	WitnessDid          string                 `protobuf:"bytes,2,opt,name=witness_did,json=witnessDid,proto3" json:"witness_did,omitempty"`                              // DID of the Witness Node submitting the proof
	ObservedContentId   string                 `protobuf:"bytes,3,opt,name=observed_content_id,json=observedContentId,proto3" json:"observed_content_id,omitempty"`       // ID of the content object being witnessed
	ObservedContentHash string                 `protobuf:"bytes,4,opt,name=observed_content_hash,json=observedContentHash,proto3" json:"observed_content_hash,omitempty"` // Hash of the content as observed by the witness
	ObservedAtWitness   int64                  `protobuf:"varint,5,opt,name=observed_at_witness,json=observedAtWitness,proto3" json:"observed_at_witness,omitempty"`      // Timestamp (Unix nano) when the witness observed the content
	Signature           string                 `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`                                                  // Cryptographic signature from the witness over the proof data
	Status              WitnessProofStatus     `protobuf:"varint,7,opt,name=status,proto3,enum=echonet.v3.core.WitnessProofStatus" json:"status,omitempty"`               // Current status of this proof
	VerifiedAt          int64                  `protobuf:"varint,8,opt,name=verified_at,json=verifiedAt,proto3" json:"verified_at,omitempty"`                             // Optional: Timestamp (Unix nano) when this proof was verified
	VerifierDid         string                 `protobuf:"bytes,9,opt,name=verifier_did,json=verifierDid,proto3" json:"verifier_did,omitempty"`                           // Optional: DID of the Verifier Node that processed this proof
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *WitnessProofV1) Reset() {
	*x = WitnessProofV1{}
	mi := &file_echonet_v3_core_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WitnessProofV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WitnessProofV1) ProtoMessage() {}

func (x *WitnessProofV1) ProtoReflect() protoreflect.Message {
	mi := &file_echonet_v3_core_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WitnessProofV1.ProtoReflect.Descriptor instead.
func (*WitnessProofV1) Descriptor() ([]byte, []int) {
	return file_echonet_v3_core_proto_rawDescGZIP(), []int{3}
}

func (x *WitnessProofV1) GetProofId() string {
	if x != nil {
		return x.ProofId
	}
	return ""
}

func (x *WitnessProofV1) GetWitnessDid() string {
	if x != nil {
		return x.WitnessDid
	}
	return ""
}

func (x *WitnessProofV1) GetObservedContentId() string {
	if x != nil {
		return x.ObservedContentId
	}
	return ""
}

func (x *WitnessProofV1) GetObservedContentHash() string {
	if x != nil {
		return x.ObservedContentHash
	}
	return ""
}

func (x *WitnessProofV1) GetObservedAtWitness() int64 {
	if x != nil {
		return x.ObservedAtWitness
	}
	return 0
}

func (x *WitnessProofV1) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *WitnessProofV1) GetStatus() WitnessProofStatus {
	if x != nil {
		return x.Status
	}
	return WitnessProofStatus_WITNESS_PROOF_STATUS_UNSPECIFIED
}

func (x *WitnessProofV1) GetVerifiedAt() int64 {
	if x != nil {
		return x.VerifiedAt
	}
	return 0
}

func (x *WitnessProofV1) GetVerifierDid() string {
	if x != nil {
		return x.VerifierDid
	}
	return ""
}

var File_echonet_v3_core_proto protoreflect.FileDescriptor

const file_echonet_v3_core_proto_rawDesc = "" +
	"\n" +
	"\x15echonet_v3_core.proto\x12\x0fechonet.v3.core\"\x9e\x04\n" +
	"\x14NexusContentObjectV1\x12\x1d\n" +
	"\n" +
	"content_id\x18\x01 \x01(\tR\tcontentId\x12\x1d\n" +
	"\n" +
	"author_did\x18\x02 \x01(\tR\tauthorDid\x12?\n" +
	"\fcontent_type\x18\x03 \x01(\x0e2\x1c.echonet.v3.core.ContentTypeR\vcontentType\x12!\n" +
	"\fcontent_body\x18\x04 \x01(\tR\vcontentBody\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12*\n" +
	"\x11created_at_client\x18\x06 \x01(\x03R\x0fcreatedAtClient\x12,\n" +
	"\x12created_at_network\x18\a \x01(\x03R\x10createdAtNetwork\x12.\n" +
	"\x13previous_version_id\x18\b \x01(\tR\x11previousVersionId\x12\x1f\n" +
	"\vlicense_uri\x18\t \x01(\tR\n" +
	"licenseUri\x12b\n" +
	"\x0fcustom_metadata\x18\n" +
	" \x03(\v29.echonet.v3.core.NexusContentObjectV1.CustomMetadataEntryR\x0ecustomMetadata\x1aA\n" +
	"\x13CustomMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9c\x03\n" +
	"\x11NexusUserObjectV1\x12\x19\n" +
	"\buser_did\x18\x01 \x01(\tR\auserDid\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x10\n" +
	"\x03bio\x18\x03 \x01(\tR\x03bio\x12\x1d\n" +
	"\n" +
	"avatar_uri\x18\x04 \x01(\tR\tavatarUri\x12\x1d\n" +
	"\n" +
	"banner_uri\x18\x05 \x01(\tR\tbannerUri\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\x03R\tupdatedAt\x12Y\n" +
	"\rprofile_links\x18\b \x03(\v24.echonet.v3.core.NexusUserObjectV1.ProfileLinksEntryR\fprofileLinks\x12\x1f\n" +
	"\vis_verified\x18\t \x01(\bR\n" +
	"isVerified\x1a?\n" +
	"\x11ProfileLinksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x94\x03\n" +
	"\x18NexusInteractionRecordV1\x12%\n" +
	"\x0einteraction_id\x18\x01 \x01(\tR\rinteractionId\x12\x19\n" +
	"\buser_did\x18\x02 \x01(\tR\auserDid\x12*\n" +
	"\x11target_content_id\x18\x03 \x01(\tR\x0ftargetContentId\x12K\n" +
	"\x10interaction_type\x18\x04 \x01(\x0e2 .echonet.v3.core.InteractionTypeR\x0finteractionType\x12)\n" +
	"\x10interaction_data\x18\x05 \x01(\tR\x0finteractionData\x12*\n" +
	"\x11created_at_client\x18\x06 \x01(\x03R\x0fcreatedAtClient\x12,\n" +
	"\x12created_at_network\x18\a \x01(\x03R\x10createdAtNetwork\x128\n" +
	"\x18reference_interaction_id\x18\b \x01(\tR\x16referenceInteractionId\"\xff\x02\n" +
	"\x0eWitnessProofV1\x12\x19\n" +
	"\bproof_id\x18\x01 \x01(\tR\aproofId\x12\x1f\n" +
	"\vwitness_did\x18\x02 \x01(\tR\n" +
	"witnessDid\x12.\n" +
	"\x13observed_content_id\x18\x03 \x01(\tR\x11observedContentId\x122\n" +
	"\x15observed_content_hash\x18\x04 \x01(\tR\x13observedContentHash\x12.\n" +
	"\x13observed_at_witness\x18\x05 \x01(\x03R\x11observedAtWitness\x12\x1c\n" +
	"\tsignature\x18\x06 \x01(\tR\tsignature\x12;\n" +
	"\x06status\x18\a \x01(\x0e2#.echonet.v3.core.WitnessProofStatusR\x06status\x12\x1f\n" +
	"\vverified_at\x18\b \x01(\x03R\n" +
	"verifiedAt\x12!\n" +
	"\fverifier_did\x18\t \x01(\tR\vverifierDid*\x8e\x01\n" +
	"\vContentType\x12\x1c\n" +
	"\x18CONTENT_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11CONTENT_TYPE_POST\x10\x01\x12\x18\n" +
	"\x14CONTENT_TYPE_ARTICLE\x10\x02\x12\x18\n" +
	"\x14CONTENT_TYPE_COMMENT\x10\x03\x12\x16\n" +
	"\x12CONTENT_TYPE_SHARE\x10\x04*\xa1\x01\n" +
	"\x0fInteractionType\x12 \n" +
	"\x1cINTERACTION_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15INTERACTION_TYPE_LIKE\x10\x01\x12\x19\n" +
	"\x15INTERACTION_TYPE_VIEW\x10\x02\x12\x19\n" +
	"\x15INTERACTION_TYPE_HIDE\x10\x03\x12\x1b\n" +
	"\x17INTERACTION_TYPE_REPORT\x10\x04*\xa2\x01\n" +
	"\x12WitnessProofStatus\x12$\n" +
	" WITNESS_PROOF_STATUS_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cWITNESS_PROOF_STATUS_PENDING\x10\x01\x12!\n" +
	"\x1dWITNESS_PROOF_STATUS_VERIFIED\x10\x02\x12!\n" +
	"\x1dWITNESS_PROOF_STATUS_REJECTED\x10\x03BBZ@github.com/DigiSocialBlock/nexus-protocol/pkg/echonet/core/typesb\x06proto3"

var (
	file_echonet_v3_core_proto_rawDescOnce sync.Once
	file_echonet_v3_core_proto_rawDescData []byte
)

func file_echonet_v3_core_proto_rawDescGZIP() []byte {
	file_echonet_v3_core_proto_rawDescOnce.Do(func() {
		file_echonet_v3_core_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_echonet_v3_core_proto_rawDesc), len(file_echonet_v3_core_proto_rawDesc)))
	})
	return file_echonet_v3_core_proto_rawDescData
}

var file_echonet_v3_core_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_echonet_v3_core_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_echonet_v3_core_proto_goTypes = []any{
	(ContentType)(0),                 // 0: echonet.v3.core.ContentType
	(InteractionType)(0),             // 1: echonet.v3.core.InteractionType
	(WitnessProofStatus)(0),          // 2: echonet.v3.core.WitnessProofStatus
	(*NexusContentObjectV1)(nil),     // 3: echonet.v3.core.NexusContentObjectV1
	(*NexusUserObjectV1)(nil),        // 4: echonet.v3.core.NexusUserObjectV1
	(*NexusInteractionRecordV1)(nil), // 5: echonet.v3.core.NexusInteractionRecordV1
	(*WitnessProofV1)(nil),           // 6: echonet.v3.core.WitnessProofV1
	nil,                              // 7: echonet.v3.core.NexusContentObjectV1.CustomMetadataEntry
	nil,                              // 8: echonet.v3.core.NexusUserObjectV1.ProfileLinksEntry
}
var file_echonet_v3_core_proto_depIdxs = []int32{
	0, // 0: echonet.v3.core.NexusContentObjectV1.content_type:type_name -> echonet.v3.core.ContentType
	7, // 1: echonet.v3.core.NexusContentObjectV1.custom_metadata:type_name -> echonet.v3.core.NexusContentObjectV1.CustomMetadataEntry
	8, // 2: echonet.v3.core.NexusUserObjectV1.profile_links:type_name -> echonet.v3.core.NexusUserObjectV1.ProfileLinksEntry
	1, // 3: echonet.v3.core.NexusInteractionRecordV1.interaction_type:type_name -> echonet.v3.core.InteractionType
	2, // 4: echonet.v3.core.WitnessProofV1.status:type_name -> echonet.v3.core.WitnessProofStatus
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_echonet_v3_core_proto_init() }
func file_echonet_v3_core_proto_init() {
	if File_echonet_v3_core_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_echonet_v3_core_proto_rawDesc), len(file_echonet_v3_core_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_echonet_v3_core_proto_goTypes,
		DependencyIndexes: file_echonet_v3_core_proto_depIdxs,
		EnumInfos:         file_echonet_v3_core_proto_enumTypes,
		MessageInfos:      file_echonet_v3_core_proto_msgTypes,
	}.Build()
	File_echonet_v3_core_proto = out.File
	file_echonet_v3_core_proto_goTypes = nil
	file_echonet_v3_core_proto_depIdxs = nil
}
